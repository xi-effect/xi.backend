"""delete-education

Revision ID: e999c40cedf1
Revises: bf5f81e3a878
Create Date: 2023-02-12 00:35:40.160677

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e999c40cedf1'
down_revision = 'bf5f81e3a878'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('standard_module_sessions')
    op.drop_table('test-point-sessions')
    op.drop_table('test_module_sessions')
    op.drop_table('points_to_pages')
    op.drop_table('points')
    op.drop_table('module-filter-sessions')
    op.drop_table('pages')
    op.drop_table('TestResult')
    op.drop_table('modules')
    op.drop_table('authors')
    op.drop_table('wip-pages')
    op.drop_table('wip-modules')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('TestResult',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"TestResult_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('module_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('short_result', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('result', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], name='fk_TestResult_module_id_modules'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_TestResult_user_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_TestResult')
    )
    op.create_table('modules',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('length', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('STANDARD', 'PRACTICE_BLOCK', 'THEORY_BLOCK', 'TEST', name='moduletype'), autoincrement=False, nullable=False),
    sa.Column('map', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('timer', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('theme', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('difficulty', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('views', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('popularity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], name='fk_modules_author_id_authors'),
    sa.ForeignKeyConstraint(['id'], ['wip-modules.id'], name='fk_modules_id_wip-modules'),
    sa.PrimaryKeyConstraint('id', name='pk_modules'),
    postgresql_ignore_search_path=False
    )
    op.create_table('pages',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('components', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('kind', postgresql.ENUM('THEORY', 'PRACTICE', name='pagekind'), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('theme', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reusable', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('public', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('blueprint', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('suspended', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('views', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], name='fk_pages_author_id_authors'),
    sa.ForeignKeyConstraint(['id'], ['wip-pages.id'], name='fk_pages_id_wip-pages'),
    sa.PrimaryKeyConstraint('id', name='pk_pages'),
    postgresql_ignore_search_path=False
    )
    op.create_table('module-filter-sessions',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('module_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('started', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('starred', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('pinned', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('hidden', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('last_visited', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_changed', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', 'module_id', name='pk_module-filter-sessions')
    )
    op.create_table('wip-modules',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"wip-modules_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('owner', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('WIP', 'PUBLISHED', name='wipstatus'), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('STANDARD', 'PRACTICE_BLOCK', 'THEORY_BLOCK', 'TEST', name='moduletype'), autoincrement=False, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('theme', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('difficulty', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_wip-modules'),
    postgresql_ignore_search_path=False
    )
    op.create_table('points_to_pages',
    sa.Column('module_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('point_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('position', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('page_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['module_id', 'point_id'], ['points.module_id', 'points.point_id'], name='fk_points_to_pages_module_id_points'),
    sa.ForeignKeyConstraint(['page_id'], ['pages.id'], name='fk_points_to_pages_page_id_pages'),
    sa.PrimaryKeyConstraint('module_id', 'point_id', 'position', 'page_id', name='pk_points_to_pages')
    )
    op.create_table('test-point-sessions',
    sa.Column('module_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('point_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('page_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('right_answers', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_answers', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('answers', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['module_id', 'user_id'], ['test_module_sessions.module_id', 'test_module_sessions.user_id'], name='fk_test-point-sessions_module_id_test_module_sessions'),
    sa.PrimaryKeyConstraint('module_id', 'user_id', 'point_id', name='pk_test-point-sessions')
    )
    op.create_table('points',
    sa.Column('module_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('point_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', postgresql.ENUM('THEORY', 'PRACTICE', name='pointtype'), autoincrement=False, nullable=False),
    sa.Column('length', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], name='fk_points_module_id_modules'),
    sa.PrimaryKeyConstraint('module_id', 'point_id', name='pk_points')
    )
    op.create_table('wip-pages',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"wip-pages_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('owner', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('WIP', 'PUBLISHED', name='wipstatus'), autoincrement=False, nullable=False),
    sa.Column('kind', postgresql.ENUM('THEORY', 'PRACTICE', name='pagekind'), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('theme', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_wip-pages')
    )
    op.create_table('authors',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('pseudonym', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('banned', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('last_image_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], name='fk_authors_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_authors')
    )
    op.create_table('test_module_sessions',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('module_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('user_id', 'module_id', name='pk_test_module_sessions')
    )
    op.create_table('standard_module_sessions',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('module_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('progress', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('theory_level', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', 'module_id', name='pk_standard_module_sessions')
    )
    # ### end Alembic commands ###
