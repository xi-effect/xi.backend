"""Initial Setup

Revision ID: 86414c36a3ba
Revises: 
Create Date: 2022-01-18 19:57:10.191980

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '86414c36a3ba'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feedback-images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedbacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('GENERAL', 'BUG_REPORT', 'CONTENT_REPORT', name='feedbacktype'), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=100), nullable=False),
    sa.Column('limit', sa.Integer(), nullable=False),
    sa.Column('accepted', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('module-filter-sessions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('started', sa.Boolean(), nullable=False),
    sa.Column('starred', sa.Boolean(), nullable=False),
    sa.Column('pinned', sa.Boolean(), nullable=False),
    sa.Column('hidden', sa.Boolean(), nullable=False),
    sa.Column('last_visited', sa.DateTime(), nullable=True),
    sa.Column('last_changed', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id', 'module_id')
    )
    op.create_table('standard_module_sessions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('theory_level', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('user_id', 'module_id')
    )
    op.create_table('test_module_sessions',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('user_id', 'module_id')
    )
    op.create_table('token_block_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('wip-modules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('WIP', 'PUBLISHED', name='wipstatus'), nullable=False),
    sa.Column('type', sa.Enum('STANDARD', 'PRACTICE_BLOCK', 'THEORY_BLOCK', 'TEST', name='moduletype'), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('theme', sa.String(length=20), nullable=False),
    sa.Column('category', sa.String(length=20), nullable=False),
    sa.Column('difficulty', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wip-pages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('WIP', 'PUBLISHED', name='wipstatus'), nullable=False),
    sa.Column('kind', sa.Enum('THEORY', 'PRACTICE', name='pagekind'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('theme', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test-point-sessions',
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('point_id', sa.Integer(), nullable=False),
    sa.Column('page_id', sa.Integer(), nullable=False),
    sa.Column('right_answers', sa.Integer(), nullable=True),
    sa.Column('total_answers', sa.Integer(), nullable=True),
    sa.Column('answers', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['module_id', 'user_id'], ['test_module_sessions.module_id', 'test_module_sessions.user_id'], ),
    sa.PrimaryKeyConstraint('module_id', 'user_id', 'point_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('email_confirmed', sa.Boolean(), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('dark_theme', sa.Boolean(), nullable=False),
    sa.Column('language', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('surname', sa.String(length=100), nullable=True),
    sa.Column('patronymic', sa.String(length=100), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('group', sa.String(length=100), nullable=True),
    sa.Column('avatar', sa.JSON(), nullable=False),
    sa.Column('theory_level', sa.Float(), nullable=False),
    sa.Column('filter_bind', sa.String(length=10), nullable=True),
    sa.Column('code', sa.String(length=100), nullable=True),
    sa.Column('invite_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['invite_id'], ['invites.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('authors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pseudonym', sa.String(length=100), nullable=False),
    sa.Column('banned', sa.Boolean(), nullable=False),
    sa.Column('last_image_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('moderators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('modules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('length', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('STANDARD', 'PRACTICE_BLOCK', 'THEORY_BLOCK', 'TEST', name='moduletype'), nullable=False),
    sa.Column('map', sa.JSON(), nullable=True),
    sa.Column('timer', sa.Integer(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('theme', sa.String(length=20), nullable=False),
    sa.Column('category', sa.String(length=20), nullable=False),
    sa.Column('difficulty', sa.String(length=20), nullable=False),
    sa.Column('views', sa.Integer(), nullable=False),
    sa.Column('popularity', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ),
    sa.ForeignKeyConstraint(['id'], ['wip-modules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('components', sa.JSON(), nullable=False),
    sa.Column('kind', sa.Enum('THEORY', 'PRACTICE', name='pagekind'), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('theme', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reusable', sa.Boolean(), nullable=False),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('blueprint', sa.Boolean(), nullable=False),
    sa.Column('suspended', sa.Boolean(), nullable=False),
    sa.Column('views', sa.Integer(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ),
    sa.ForeignKeyConstraint(['id'], ['wip-pages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('points',
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('point_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('THEORY', 'PRACTICE', name='pointtype'), nullable=False),
    sa.Column('length', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.PrimaryKeyConstraint('module_id', 'point_id')
    )
    op.create_table('points_to_pages',
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('point_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('page_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['module_id', 'point_id'], ['points.module_id', 'points.point_id'], ),
    sa.ForeignKeyConstraint(['page_id'], ['pages.id'], ),
    sa.PrimaryKeyConstraint('module_id', 'point_id', 'position', 'page_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('points_to_pages')
    op.drop_table('points')
    op.drop_table('pages')
    op.drop_table('modules')
    op.drop_table('moderators')
    op.drop_table('authors')
    op.drop_table('users')
    op.drop_table('test-point-sessions')
    op.drop_table('wip-pages')
    op.drop_table('wip-modules')
    op.drop_table('token_block_list')
    op.drop_table('test_module_sessions')
    op.drop_table('standard_module_sessions')
    op.drop_table('module-filter-sessions')
    op.drop_table('invites')
    op.drop_table('feedbacks')
    op.drop_table('feedback-images')
    # ### end Alembic commands ###
