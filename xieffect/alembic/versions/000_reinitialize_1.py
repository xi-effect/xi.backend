"""reinitialize-1

Revision ID: 000
Revises: 
Create Date: 2023-10-04 00:18:41.089809

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "000"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "blocked-mod-tokens",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("jti", sa.String(length=36), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_blocked-mod-tokens")),
    )
    op.create_table(
        "blocked_tokens",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("jti", sa.String(length=36), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_blocked_tokens")),
        sa.UniqueConstraint("id", name=op.f("uq_blocked_tokens_id")),
    )
    with op.batch_alter_table('blocked_tokens', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_blocked_tokens_id'), ['id'])
    op.create_table(
        "discussions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_discussions")),
    )
    op.create_table(
        "files",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("uploader_id", sa.Integer(), nullable=False),
        sa.Column("deleted", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_files")),
    )
    op.create_table(
        "invites",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("code", sa.String(length=100), nullable=False),
        sa.Column("limit", sa.Integer(), nullable=False),
        sa.Column("accepted", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_invites")),
    )
    op.create_table(
        "mub-moderators",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=100), nullable=False),
        sa.Column("password", sa.String(length=100), nullable=False),
        sa.Column("super", sa.Boolean(), nullable=False),
        sa.Column(
            "mode", sa.Enum("DARK", "LIGHT", name="interfacemode"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_mub-moderators")),
        sa.UniqueConstraint("username", name=op.f("uq_mub-moderators_username")),
    )
    op.create_table(
        "mub-sections",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_mub-sections")),
    )
    op.create_table(
        "mub-permissions",
        sa.Column("section_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(
            ["section_id"],
            ["mub-sections.id"],
            name=op.f("fk_mub-permissions_section_id_mub-sections"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_mub-permissions")),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("email_confirmed", sa.Boolean(), nullable=False),
        sa.Column("password", sa.String(length=100), nullable=False),
        sa.Column("username", sa.String(length=100), nullable=False),
        sa.Column("handle", sa.String(length=100), nullable=True),
        sa.Column("theme", sa.String(length=10), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column("surname", sa.String(length=100), nullable=True),
        sa.Column("patronymic", sa.String(length=100), nullable=True),
        sa.Column("birthday", sa.Date(), nullable=True),
        sa.Column("code", sa.String(length=100), nullable=True),
        sa.Column("invite_id", sa.Integer(), nullable=True),
        sa.Column("avatar_id", sa.Integer(), nullable=True),
        sa.Column("deleted", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["avatar_id"],
            ["files.id"],
            name=op.f("fk_users_avatar_id_files"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["invite_id"],
            ["invites.id"],
            name=op.f("fk_users_invite_id_invites"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("email", name=op.f("uq_users_email")),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_users_handle"), ["handle"], unique=True)

    with op.batch_alter_table("files", schema=None) as batch_op:
        batch_op.create_foreign_key(
            "fk_files_uploader_id_users",
            "users",
            ["uploader_id"],
            ["id"],
            ondelete="CASCADE",
        )

    op.create_table(
        "community",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("avatar_id", sa.Integer(), nullable=True),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.Column("deleted", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["avatar_id"],
            ["files.id"],
            name=op.f("fk_community_avatar_id_files"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["users.id"],
            name=op.f("fk_community_owner_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_community")),
    )
    op.create_table(
        "ds_messages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sa.JSON(), nullable=False),
        sa.Column("pinned", sa.Boolean(), nullable=False),
        sa.Column("sender_id", sa.Integer(), nullable=True),
        sa.Column("discussion_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["discussion_id"],
            ["discussions.id"],
            name=op.f("fk_ds_messages_discussion_id_discussions"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["users.id"],
            name=op.f("fk_ds_messages_sender_id_users"),
            onupdate="CASCADE",
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_ds_messages")),
    )
    op.create_table(
        "feedbacks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("GENERAL", "BUG_REPORT", "CONTENT_REPORT", name="feedbacktype"),
            nullable=False,
        ),
        sa.Column("data", sa.JSON(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_feedbacks_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_feedbacks")),
    )
    op.create_table(
        "mub-modperms",
        sa.Column("moderator_id", sa.Integer(), nullable=False),
        sa.Column("permission_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["moderator_id"],
            ["mub-moderators.id"],
            name=op.f("fk_mub-modperms_moderator_id_mub-moderators"),
        ),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["mub-permissions.id"],
            name=op.f("fk_mub-modperms_permission_id_mub-permissions"),
        ),
        sa.PrimaryKeyConstraint(
            "moderator_id", "permission_id", name=op.f("pk_mub-modperms")
        ),
    )
    op.create_table(
        "pages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("content", sa.JSON(), nullable=False),
        sa.Column("creator_id", sa.Integer(), nullable=True),
        sa.Column("deleted", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["creator_id"],
            ["users.id"],
            name=op.f("fk_pages_creator_id_users"),
            onupdate="CASCADE",
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_pages")),
    )
    op.create_table(
        "community_participant",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("community_id", sa.Integer(), nullable=False),
        sa.Column("prev_id", sa.Integer(), nullable=True),
        sa.Column("next_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["community_id"],
            ["community.id"],
            name=op.f("fk_community_participant_community_id_community"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["next_id"],
            ["community_participant.id"],
            name=op.f("fk_community_participant_next_id_community_participant"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["prev_id"],
            ["community_participant.id"],
            name=op.f("fk_community_participant_prev_id_community_participant"),
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_community_participant_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_community_participant")),
    )
    op.create_table(
        "cs_chat_messages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("community_id", sa.Integer(), nullable=False),
        sa.Column("sender_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["community_id"],
            ["community.id"],
            name=op.f("fk_cs_chat_messages_community_id_community"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["sender_id"],
            ["users.id"],
            name=op.f("fk_cs_chat_messages_sender_id_users"),
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cs_chat_messages")),
    )
    op.create_table(
        "cs_chat_participants",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("community_id", sa.Integer(), nullable=False),
        sa.Column("state", sa.JSON(), nullable=False),
        sa.ForeignKeyConstraint(
            ["community_id"],
            ["community.id"],
            name=op.f("fk_cs_chat_participants_community_id_community"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_cs_chat_participants_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "community_id", name=op.f("pk_cs_chat_participants")
        ),
    )
    op.create_table(
        "cs_invitations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=100), nullable=True),
        sa.Column("community_id", sa.Integer(), nullable=False),
        sa.Column("deadline", sa.DateTime(), nullable=True),
        sa.Column("limit", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["community_id"],
            ["community.id"],
            name=op.f("fk_cs_invitations_community_id_community"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cs_invitations")),
    )
    with op.batch_alter_table("cs_invitations", schema=None) as batch_op:
        batch_op.create_index(
            "hash_index_cs_invites_community_id",
            ["community_id"],
            unique=False,
            postgresql_using="hash",
        )

    op.create_table(
        "cs_posts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column(
            "created", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "changed", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("community_id", sa.Integer(), nullable=False),
        sa.Column("deleted", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["community_id"],
            ["community.id"],
            name=op.f("fk_cs_posts_community_id_community"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_cs_posts_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cs_posts")),
    )
    op.create_table(
        "cs_roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.Column("color", sa.String(length=6), nullable=True),
        sa.Column("community_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["community_id"],
            ["community.id"],
            name=op.f("fk_cs_roles_community_id_community"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cs_roles")),
    )
    op.create_table(
        "cs_tasks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("community_id", sa.Integer(), nullable=False),
        sa.Column("page_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("opened", sa.DateTime(), nullable=True),
        sa.Column("closed", sa.DateTime(), nullable=True),
        sa.Column("deleted", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["community_id"],
            ["community.id"],
            name=op.f("fk_cs_tasks_community_id_community"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_cs_tasks_user_id_users"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cs_tasks")),
    )
    with op.batch_alter_table("cs_tasks", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_cs_tasks_closed"), ["closed"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_cs_tasks_created"), ["created"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_cs_tasks_opened"), ["opened"], unique=False
        )

    op.create_table(
        "ds_message_files",
        sa.Column("message_id", sa.Integer(), nullable=False),
        sa.Column("file_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["file_id"],
            ["files.id"],
            name=op.f("fk_ds_message_files_file_id_files"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["message_id"],
            ["ds_messages.id"],
            name=op.f("fk_ds_message_files_message_id_ds_messages"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "message_id", "file_id", name=op.f("pk_ds_message_files")
        ),
    )
    op.create_table(
        "feedback_images",
        sa.Column("feedback_id", sa.Integer(), nullable=False),
        sa.Column("file_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["feedback_id"],
            ["feedbacks.id"],
            name=op.f("fk_feedback_images_feedback_id_feedbacks"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["file_id"],
            ["files.id"],
            name=op.f("fk_feedback_images_file_id_files"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "feedback_id", "file_id", name=op.f("pk_feedback_images")
        ),
    )
    op.create_table(
        "cs_embeds",
        sa.Column("task_id", sa.Integer(), nullable=False),
        sa.Column("file_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["file_id"],
            ["files.id"],
            name=op.f("fk_cs_embeds_file_id_files"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["cs_tasks.id"],
            name=op.f("fk_cs_embeds_task_id_cs_tasks"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("task_id", "file_id", name=op.f("pk_cs_embeds")),
    )
    op.create_table(
        "cs_invitation_roles",
        sa.Column("invitation_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["invitation_id"],
            ["cs_invitations.id"],
            name=op.f("fk_cs_invitation_roles_invitation_id_cs_invitations"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["cs_roles.id"],
            name=op.f("fk_cs_invitation_roles_role_id_cs_roles"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "invitation_id", "role_id", name=op.f("pk_cs_invitation_roles")
        ),
    )
    op.create_table(
        "cs_participant_roles",
        sa.Column("participant_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["participant_id"],
            ["community_participant.id"],
            name=op.f("fk_cs_participant_roles_participant_id_community_participant"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["cs_roles.id"],
            name=op.f("fk_cs_participant_roles_role_id_cs_roles"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "participant_id", "role_id", name=op.f("pk_cs_participant_roles")
        ),
    )
    op.create_table(
        "cs_role_permissions",
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column(
            "permission_type",
            sa.Enum(
                "MANAGE_COMMUNITY",
                "MANAGE_INVITATIONS",
                "MANAGE_ROLES",
                "MANAGE_TASKS",
                "MANAGE_NEWS",
                "MANAGE_MESSAGES",
                "MANAGE_PARTICIPANTS",
                name="permissiontype",
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["cs_roles.id"],
            name=op.f("fk_cs_role_permissions_role_id_cs_roles"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "role_id", "permission_type", name=op.f("pk_cs_role_permissions")
        ),
    )
    op.create_table(
        "cs_tests",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["cs_tasks.id"],
            name=op.f("fk_cs_tests_id_cs_tasks"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cs_tests")),
    )
    op.create_table(
        "cs_questions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column(
            "kind",
            sa.Enum("SIMPLE", "DETAILED", "CHOICE", name="questionkind"),
            nullable=False,
        ),
        sa.Column("test_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["test_id"],
            ["cs_tests.id"],
            name=op.f("fk_cs_questions_test_id_cs_tests"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_cs_questions")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("cs_questions")
    op.drop_table("cs_tests")
    op.drop_table("cs_role_permissions")
    op.drop_table("cs_participant_roles")
    op.drop_table("cs_invitation_roles")
    op.drop_table("cs_embeds")
    op.drop_table("feedback_images")
    op.drop_table("ds_message_files")
    with op.batch_alter_table("cs_tasks", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_cs_tasks_opened"))
        batch_op.drop_index(batch_op.f("ix_cs_tasks_created"))
        batch_op.drop_index(batch_op.f("ix_cs_tasks_closed"))

    op.drop_table("cs_tasks")
    op.drop_table("cs_roles")
    op.drop_table("cs_posts")
    with op.batch_alter_table("cs_invitations", schema=None) as batch_op:
        batch_op.drop_index(
            "hash_index_cs_invites_community_id", postgresql_using="hash"
        )

    op.drop_table("cs_invitations")
    op.drop_table("cs_chat_participants")
    op.drop_table("cs_chat_messages")
    op.drop_table("community_participant")
    op.drop_table("pages")
    op.drop_table("mub-modperms")
    op.drop_table("feedbacks")
    op.drop_table("ds_messages")
    op.drop_table("community")
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_handle"))

    with op.batch_alter_table("files", schema=None) as batch_op:
        batch_op.drop_constraint("fk_files_uploader_id_users")

    op.drop_table("users")
    op.drop_table("mub-permissions")
    op.drop_table("mub-sections")
    op.drop_table("mub-moderators")
    op.drop_table("invites")
    op.drop_table("files")
    op.drop_table("discussions")
    op.drop_table("blocked_tokens")
    op.drop_table("blocked-mod-tokens")
    # ### end Alembic commands ###
