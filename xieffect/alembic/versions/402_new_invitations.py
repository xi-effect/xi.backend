"""new_invitations

Revision ID: 402
Revises: 409
Create Date: 2023-06-11 12:41:53.174443

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '402'
down_revision = '409'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cs_invitations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=100), nullable=True),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('deadline', sa.DateTime(), nullable=True),
    sa.Column('limit', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], name=op.f('fk_cs_invitations_community_id_community'), onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cs_invitations'))
    )
    op.create_table('cs_invitation_roles',
    sa.Column('invitation_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['invitation_id'], ['cs_invitations.id'], name=op.f('fk_cs_invitation_roles_invitation_id_cs_invitations'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['cs_roles.id'], name=op.f('fk_cs_invitation_roles_role_id_cs_roles'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('invitation_id', 'role_id', name=op.f('pk_cs_invitation_roles'))
    )
    op.drop_table('community_invites')
    with op.batch_alter_table('community', schema=None) as batch_op:
        batch_op.add_column(sa.Column('owner_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(batch_op.f('fk_community_owner_id_users'), 'users', ['owner_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('community_participant', schema=None) as batch_op:
        batch_op.drop_column('role')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('community_participant', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', postgresql.ENUM('BASE', 'OWNER', name='participantrole'), autoincrement=False, nullable=False))

    with op.batch_alter_table('community', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_community_owner_id_users'), type_='foreignkey')
        batch_op.drop_column('owner_id')

    op.create_table('community_invites',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('code', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('community_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('BASE', 'OWNER', name='participantrole'), autoincrement=False, nullable=False),
    sa.Column('deadline', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('limit', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], name='fk_community_invites_community_id_community', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='pk_community_invites')
    )
    op.drop_table('cs_invitation_roles')
    op.drop_table('cs_invitations')
    # ### end Alembic commands ###
