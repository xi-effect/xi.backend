name: Feature Branch PR Pipeline

on:
  pull_request:
    branches-ignore:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push (PR)
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:flask-${{ github.event.issue.number }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:buildcache-back-${{ github.event.issue.number }}
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:buildcache-back-${{ github.event.issue.number }},mode=max

  docs:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install asyncapi generator
        run: npm install -g @asyncapi/generator @asyncapi/html-template

      - id: extract
        name: Extract docs
        uses: shrink/actions-docker-extract@v1
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:flask-${{ github.event.issue.number }}
          path: /files/async-api.json

      - name: Generate docs
        run: >
          ag ${{ steps.extract.outputs.destination }}/async-api.json
          @asyncapi/html-template
          --force-write
          -p singleFile=true
          -o ./sio-doc/

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Run pytest
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:flask-${{ github.event.issue.number }}
          run: sh /app/testing.sh
