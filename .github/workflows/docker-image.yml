name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout 
        uses: actions/checkout@v2
        with:
          submodules: recursive
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        if: github.event_name != 'pull_request'
        name: Build and push (push)
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:flask-image
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:buildcache-back
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:buildcache-back,mode=max
      -
        if: github.event_name == 'pull_request'
        name: Build and push (PR)
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:flask-${{ github.event.pull_request.head.ref }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:buildcache-back-${{ github.event.pull_request.head.ref }}
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:buildcache-back-${{ github.event.pull_request.head.ref }},mode=max

  deploy:
      needs: build

      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      if: github.event_name != 'pull_request'

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
      -
        name: Run SSH command
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            cd ~/xieffect-core
            docker system prune -a -f
            docker-compose pull flask
            docker-compose up -d
          host: ${{ secrets.SERVER_IP }}
          username: root
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
        env:
          CI: true
