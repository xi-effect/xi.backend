name: Common Pipeline Steps

on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
    secrets:
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_ACCESS_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build and push
        uses: niqzart/ffs-devops/docker-build@main
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          repository: ${{ secrets.DOCKER_HUB_USERNAME }}
          tag: ${{ inputs.tag }}

      - name: Extract and upload doc to artifacts
        uses: niqzart/ffs-devops/docker-extract-artifact@main
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_USERNAME }}:${{ inputs.tag }}
          folder-path: /files
          filename: async-api.json
          artifact-name: async-api.json
          retention-days: 1
          if-no-files-found: error

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Run pytest
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_USERNAME }}:${{ inputs.tag }}
          run: sh /app/testing.sh

  docs:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download async-api.json from artifacts
        uses: actions/download-artifact@v3
        with:
          name: async-api.json
          path: ./

      - name: Generate docs
        uses: niqzart/ffs-devops/generate-asyncapi@main
        with:
          template: "@asyncapi/html-template"
          input: ./async-api.json
          output: -o ./sio-doc/
          parameters: -p singleFile=true

      - name: Upload docs to artifact
        uses: actions/upload-artifact@v3
        with:
          name: sio-doc
          path: ./sio-doc/index.html
          retention-days: 1
