name: Docker Image CI

on:
  push:
    branches: [ prod ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push (PR)
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:flask-prod
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:buildcache-back-prod
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:buildcache-back-prod,mode=max

      - id: extract
        name: Extract docs
        uses: shrink/actions-docker-extract@v1
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:flask-image
          path: /files/async-api.json

      - name: Generate docs
        run: >
        ag ${{ steps.extract.outputs.destination }}/async-api.json
        @asyncapi/html-template
        --force-write
        -p singleFile=true
        -o ./sio-doc/

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Run pytest
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/xieffect:flask-prod
          run: sh /app/testing.sh
