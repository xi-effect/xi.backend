[flake8]
extend-exclude =
  __lib__
  alembic
  moderation
  communication
  chatting_test*
  *2.py

max-line-length = 88

max-arguments = 10
max-decorators = 7
max-local-variables = 10
max-methods = 15
max-module-members = 10
max-name-length = 30
max-returns = 10
max-try-body-length = 2

show-violation-links = True

extend-ignore =
  # Style & Naming
  E501  # line too long
  WPS101 WPS110 WPS111 WPS120 WPS121 WPS122 WPS123  # bad naming conventions
  WPS115  # "upper-case constant in a class"  # classes are upper-case because PEP8
  U101  # arguments starting with _ can be unused

  # Do NOT disable features
  WPS100 WPS420  # pass is a thing
  WPS140 WPS141 WPS430 WPS431  # nested functions & classes are a thing
  WPS305 WPS306  # python 2 is EOL, f-strings are the best
  WPS332  # I like walrus
  WPS336  # explicit string concatenation is okay
  WPS348  # lines starting with dots are a thing
  WPS412  # logic in __init__ is a thing
  WPS451  # positional only arguments are a thing
  WPS600  # string enums work via subclassing a builtin
  WPS602  # @staticmetod is a thing
  WPS604  # logic in classes is fine
  TYP001  # support only 3.9, no looking back

  # False positives
  C # trailing comma triggered by generators
  Q # quotes, but literal is better because settings
  NQA102  # no active violations seem to be detected

  # Weird rules
  WPS317  # enforces weird indents
  WPS338  # ordering is not linting
  WPS440  # block variables overlap is weird

  # Docs
  D1 D2 D4 RST304 DAR
  # add E203 if black is enforced

  # TODO: Style
  WPS319 JS101 JS102  # use carefully: breaks nested structures
  WPS320 WPS337 WPS352  # multiline functions, ifs and loops are not fine?
  WPS529  # implicit `.get()` dict usage???
  WPS606  # expressions in base class???

  # TODO: Pretty
  WPS223  # less elifs
  WPS226  # literal overuse
  WPS421  # remove prints
  WPS432  # magic number triggered by http codes & pytest.order & the lister
  TAE001  # too few type annotations

  # TODO: Complexity
  WPS204 WPS221 WPS231   # complexity, for later

  # TODO: Security
  DUO102 S311   # replace random with random.SystemRandom
  WPS130 WPS300   # look into local imports

per-file-ignores =
  xieffect/test/*: S101 WPS118 WPS202 WPS210 WPS213 WPS218 WPS226 WPS230 WPS441 WPS507 WPS509
  __init__.py: F401 WPS235
  api.py: WPS201 WPS235
  wsgi.py: WPS201 WPS235 WPS433
  _core.py: WPS227 WPS236 WPS433
  *_db.py: WPS601 A003

# S101: asserts
# WPS118: long function names
# WPS230: too many public instance attributes

# WPS201 & WPS235: many imports in __init__, app.py & wsgi.py is the point
# F401: unused imports in __init__ are fine
# A003: screams at database's `id`s & `type`s
# WPS433: nested imports
# WPS601: shadowed class attribute is essential for SQLAlchemy

unused-arguments-ignore-abstract-functions=True
unused-arguments-ignore-overload-functions=True
unused-arguments-ignore-stub-functions=True

test-func-name-validator-regex = test_.*

literal-inline-quotes = double
literal-multiline-quotes = double
literal-docstring-quotes = double
literal-include-name = True
